@page "/books/"
@inject IBookService bookService
@inject IJSRuntime js

<PageTitle>Books</PageTitle>

<h3>Books</h3>

@if (!response.Success)
{
    <div class="alert alert-info">
        <h4>@response.Message</h4>
    </div>
}
else
{
    @if (BooksList == null)
    {
        <div class="alert alert-info">
            <h3>Loading...</h3>
        </div>
    }
    else
    {
        <AuthorizeView Roles="Administrator">
            <a class="btn btn-outline-dark mb-3" href="/books/create/">
                <span class="oi oi-plus" aria-hidden="true"></span> New Book
            </a>
        </AuthorizeView>

        <div class="table-responsive">
            <table class="table table-striped table-hover border">
                <thead class="table-dark">
                    <tr>
                        <th scope="col">Image</th>
                        <th scope="col">Title</th>
                        <th scope="col">Price</th>
                        <th scope="col">Author</th>
                        <th scope="col">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var book in BooksList)
                    {
                        <tr>
                            <td><img src="@book.Image" width="100" height="100" alt="@book.Title"/></td>
                            <td>@book.Title</td>
                            <td>@book.Price.ToString("C")</td>
                            <td><a class="btn btn-link" href="/authors/details/@book.AuthorId">@book.AuthorName</a></td>
                            <td>
                                <a class="btn btn-primary m-1" href="/books/details/@book.Id">
                                    <span class="oi oi-book" aria-hidden="true"></span> Details
                                </a>

                                <AuthorizeView Roles="Administrator">
                                    <a class="btn btn-warning m-1" href="/books/update/@book.Id">
                                        <span class="oi oi-pencil" aria-hidden="true"></span> Edit
                                    </a>

                                    <button class="btn btn-danger m-1" @onclick=@(() => Delete(book.Id)) href="/books/delete/@book.Id">
                                        <span class="oi oi-delete" aria-hidden="true"></span> Delete
                                    </button>
                                </AuthorizeView>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
}
@code {
    private List<BookReadOnlyDto> BooksList;
    private Response<List<BookReadOnlyDto>> response = new Response<List<BookReadOnlyDto>> { Success = true };

    protected override async Task OnInitializedAsync()
    {
        var response = await bookService.Get();
        if (response.Success)
        {
            BooksList = response.Data;
        }
    }

    private async Task Delete(int bookId)
    {
        // Get the book to show the title
        var book = BooksList.First(q => q.Id == bookId);
        // Use JavaScript to prompt the user a confirmation alert
        var confirm = await js.InvokeAsync<bool>("confirm", $"Are You Sure You Want To Delete {book.Title}? \n\n YOU CANNOT UNDO THIS ACTION");
        if (confirm)
        {
            var response = await bookService.Delete(bookId);
            if (response.Success)
            {
                await OnInitializedAsync();
            }
        }
    }
}
