@page "/authors/details/{id:int}"
@inject IAuthorService authorService
@inject NavigationManager navManager

<PageTitle>Author Details</PageTitle>

<h3>Author Details</h3>

<div>
    <EditForm Model="AuthorModel">
        <fieldset disabled="true">
            <div class="form-group">
                <label for="firstName">First Name</label>
                <InputText class="form-control" @bind-Value="AuthorModel.FirstName" id="lastName" />
                <ValidationMessage For="@(() => AuthorModel.FirstName)" />
            </div>

            <div class="form-group">
                <label for="lastName">Last Name</label>
                <InputText class="form-control" @bind-Value="AuthorModel.LastName" id="lastName" />
                <ValidationMessage For="@(() => AuthorModel.LastName)" />
            </div>

            <div class="form-group">
                <label for="bio">Bio</label>
                <InputTextArea class="form-control" @bind-Value="AuthorModel.Bio" id="bio" />
                <ValidationMessage For="@(() => AuthorModel.Bio)" />
            </div>
            <br/>
        </fieldset>

        <div>
            <button @onclick="GoToEdit" class="mt-2 btn btn-outline-warning">
                <span class="oi oi-pencil" aria-hidden="true"></span> Edit
            </button>

            
            <button @onclick="BackToList" class="mt-2 btn btn-outline-secondary">
                <span class="oi oi-arrow-left" aria-hidden="true"></span> Back
            </button>
        </div>

    </EditForm>
</div>

@code {
    [Parameter]
    public int id { get; set; }

    private AuthorReadOnlyDto AuthorModel = new AuthorReadOnlyDto();

    protected async override Task OnInitializedAsync()
    {
        var response = await authorService.GetAuthorAsync(id);
        if (response.Success)
        {
            AuthorModel = response.Data;
        }
    }

    private void BackToList()
    {
        navManager.NavigateTo("/authors/");
    }

    private void GoToEdit()
    {
        navManager.NavigateTo($"/authors/update/{AuthorModel.Id}");
    }
}
