@page "/authors/create/"
@inject IAuthorService authorService
@inject NavigationManager navManager
@attribute [Authorize(Roles = "Administrator")]

<PageTitle>New Author</PageTitle>
<BackButton backLink="/authors/"></BackButton>

<div class="container mt-4">
    <div class="row mb-4 text-center">
        <h3>Create New Author</h3>
    </div>

    <EditForm Model="AuthorModel" OnValidSubmit="HandleCreateAuthor" class="needs-validation">
        <DataAnnotationsValidator />
        <ValidationSummary class="mb-3" />

        <div class="row g-3">
            <!-- First Name -->
            <div class="col-md-6">
                <label class="form-label" for="firstName">First Name</label>
                <InputText class="form-control" @bind-Value="AuthorModel.FirstName" id="firstName" />
                <ValidationMessage For="@(() => AuthorModel.FirstName)" />
            </div>

            <!-- Last Name -->
            <div class="col-md-6">
                <label class="form-label" for="lastName">Last Name</label>
                <InputText class="form-control" @bind-Value="AuthorModel.LastName" id="lastName" />
                <ValidationMessage For="@(() => AuthorModel.LastName)" />
            </div>
        </div>

        <div class="row g-3 mt-3">
            <!-- Alias -->
            <div class="col-12">
                <label class="form-label" for="alias">Alias (AKA)</label>
                <InputText class="form-control" @bind-Value="AuthorModel.Alias" id="alias" />
                <ValidationMessage For="@(() => AuthorModel.Alias)" />
            </div>
        </div>

        <div class="row g-3 mt-3">
            <!-- Bio -->
            <div class="col-12">
                <label class="form-label" for="bio">Bio</label>
                <InputTextArea class="form-control" @bind-Value="AuthorModel.Bio" id="bio" rows="4" />
                <ValidationMessage For="@(() => AuthorModel.Bio)" />
            </div>
        </div>

        <div class="row mt-4">
            <div class="col text-center">
                <button type="submit" class="btn btn-primary">
                    <span class="oi oi-pencil me-1" aria-hidden="true"></span> Create
                </button>
            </div>
        </div>
    </EditForm>
</div>


@code {
    private AuthorCreateDto AuthorModel = new();

    private async Task HandleCreateAuthor()
    {
        var response = await authorService.Create(AuthorModel);
        if (response.Success)
        {
            BackToList();
        }
    }

    private void BackToList()
    {
        navManager.NavigateTo("/authors/");
    }
}
