@page "/authors/create/"
@inject IAuthorService authorService
@inject NavigationManager navManager
@attribute [Authorize(Roles = "Administrator")]

<PageTitle>New Author</PageTitle>

<div class="container">
    <div class="row row-cols-auto">
        <BackButton backLink="/authors/"></BackButton>
        <h3>Create New Author</h3>
    </div>

    <div>
        <EditForm Model="AuthorModel" OnValidSubmit="HandleCreateAuthor">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label class="form-label" for="firstName">First Name</label>
                <InputText class="form-control" @bind-Value="AuthorModel.FirstName" id="lastName" />
                <ValidationMessage For="@(() => AuthorModel.FirstName)" />
            </div>

            <div class="form-group">
                <label class="form-label" for="lastName">Last Name</label>
                <InputText class="form-control" @bind-Value="AuthorModel.LastName" id="lastName" />
                <ValidationMessage For="@(() => AuthorModel.LastName)" />
            </div>

            <div class="form-group">
                <label class="form-label" for="alias">Alias (AKA)</label>
                <InputText class="form-control" @bind-Value="AuthorModel.Alias" id="alias" />
                <ValidationMessage For="@(() => AuthorModel.Alias)" />
            </div>

            <div class="form-group">
                <label class="form-label" for="bio">Bio</label>
                <InputTextArea class="form-control" @bind-Value="AuthorModel.Bio" id="bio" />
                <ValidationMessage For="@(() => AuthorModel.Bio)" />
            </div>

            <button type="submit" class="mt-2 btn btn-primary">
                <span class="oi oi-pencil" aria-hidden="true"></span> Create
            </button>

        </EditForm>
    </div>
</div>

@code {
    private AuthorCreateDto AuthorModel = new();

    private async Task HandleCreateAuthor()
    {
        var response = await authorService.Create(AuthorModel);
        if (response.Success)
        {
            BackToList();
        }
    }

    private void BackToList()
    {
        navManager.NavigateTo("/authors/");
    }
}
