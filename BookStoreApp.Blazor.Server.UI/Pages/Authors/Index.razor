@page "/authors/"
@inject IAuthorService authorService

<PageTitle>Authors</PageTitle>

<h3>Authors</h3>

@if (!response.Success)
{
    <div class="alert alert-info">
        <h4>@response.Message</h4>
    </div>
}
else
{
    @if (AuthorsList == null)
    {
        <div class="alert alert-info">
            <h3>Loading Data...</h3>
        </div>
    }
    else
    {
        <a class="btn btn-outline-dark mb-3" href="/authors/create/">
            <span class="oi oi-plus" aria-hidden="true"></span> Create
        </a>

        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead class="thead-dark">
                    <tr>
                        <th scope="col">First Name</th>
                        <th scope="col">Last Name</th>
                        <th scope="col">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var author in AuthorsList)
                    {
                        <tr>
                            <td>@author.FirstName</td>
                            <td>@author.LastName</td>
                            <td>
                                <a class="btn btn-primary m-1" href="/authors/details/@author.Id">
                                    <span class="oi oi-book" aria-hidden="true"></span> Details
                                </a>

                                <a class="btn btn-warning m-1" href="/authors/update/@author.Id">
                                    <span class="oi oi-pencil" aria-hidden="true"></span> Edit
                                </a>

                                <a class="btn btn-danger m-1" href="/authors/delete/@author.Id">
                                    <span class="oi oi-delete" aria-hidden="true"></span> Delete
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
}

@code {
    // Authors
    private List<AuthorReadOnlyDto> AuthorsList;
    private Response<List<AuthorReadOnlyDto>> response = new Response<List<AuthorReadOnlyDto>> { Success = true };

    protected override async Task OnInitializedAsync()
    {
        var response = await authorService.GetAuthorsAsync();
        if(response.Success)
        {
            AuthorsList = response.Data;
        }
    }
}
