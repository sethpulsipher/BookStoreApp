@page "/authors/"
@inject IAuthorService authorService
@inject IJSRuntime js

<PageTitle>Authors</PageTitle>



@if (!response.Success)
{
    <div class="alert alert-info">
        <h4>@response.Message</h4>
    </div>
}
else
{
    @if (AuthorsList == null)
    {
        <div class="spinner"></div>
    }
    else
    {
        // TOP ROW
        <div class="row">
            <div class="col-12 text-center">
                <h1>Authors</h1>
            </div>
        </div>

        <div class="row mb-3">
            <AuthorizeView Roles="Administrator">
                <div class="col">
                    <a href="/authors/create/">
                        <span class="oi oi-plus" aria-hidden="true"></span> Add
                    </a>
                </div>
            </AuthorizeView>
        </div>

        /*
         *  TABLE
         */
        <div class="table-responsive">
            <table class="table table-striped table-hover border">
                <thead class="table-dark">
                    <tr>
                        <th scope="col">First Name</th>
                        <th scope="col" class="text-center">Last Name</th>
                        <th scope="col" class="text-center">Alias</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var author in AuthorsList)
                    {
                        <tr>
                            <td class="align-middle">@author.FirstName</td>
                            <td class="align-middle text-center">@author.LastName</td>
                            <td class="align-middle text-center">@author.Alias</td>
                            <td class="text-end">
                                <a class="btn btn-primary m-1" href="/authors/details/@author.Id">
                                    <span class="oi oi-book" aria-hidden="true"></span> Details
                                </a>

                                <AuthorizeView Roles="Administrator">
                                    <MudMenu Class="pe-1">
                                        <ActivatorContent>
                                            <a>
                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-three-dots-vertical" viewBox="0 0 16 16">
                                                    <path d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0" />
                                                </svg>
                                            </a>
                                        </ActivatorContent>
                                        <ChildContent>
                                            <MudMenuItem><a href="authors/edit/@author.Id">Edit</a></MudMenuItem>
                                            <MudMenuItem OnClick="@(() => Delete(author.Id))" Class="text-danger">Delete</MudMenuItem>
                                        </ChildContent>
                                    </MudMenu>
                                </AuthorizeView>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
}

@code {
    // Authors
    private List<AuthorReadOnlyDto> AuthorsList;
    private Response<List<AuthorReadOnlyDto>> response = new Response<List<AuthorReadOnlyDto>> { Success = true };

    protected override async Task OnInitializedAsync()
    {
        var response = await authorService.Get();
        if(response.Success)
        {
            AuthorsList = response.Data;
        }
    }

    private async Task Delete(int authorId)
    {
        // Get the author to show first/last name
        var author = AuthorsList.First(q => q.Id == authorId);
        // Use JavaScript to prompt the user a confirmation alert
        var confirm = await js.InvokeAsync<bool>("confirm", $"Are You Sure You Want To Delete {author.FirstName} {author.LastName}? \n\n YOU CANNOT UNDO THIS ACTION");
        if (confirm)
        {
            var response = await authorService.Delete(authorId);
            if (response.Success)
            {
                await OnInitializedAsync();
            }
        }
    }
}
